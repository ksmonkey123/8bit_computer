INPUT SIGNALS:
 * bits 0-7: instruction register (opcode)
 * bit  8: carry flag
 * bit  9: zero flag
 * bit 10: negative flag
 * bits 11-12: step number (0-3)

Fetch Cycles use high bits 0x07 (all flags set, step 0)
  This works because it is impossible for both the zero and negative flags
  to be set at the same time (a number cannot be both zero and negative at
  the same time). Therefore, this flag combination can be used for fetch
  cycle configurations instead.


FETCH CYCLE:
 * bits 0-1: fetch size
    0: don't use
    1: fetch size 2
    2: fetch size 1
    3: fetch size 0
 * bits 2-6: unused
 * bit 7: halt flag (if set, halt execution
 * bits 8-15: unused

EXECUTE CYCLE:
 * bits   0-3: data source (0 if none selected)
 * bits   4-6: data target
 * bit      7: last-step indicator (go to next command if set)
 * bits  8-12: action
 * bits 13-15: address source

ACTION:
0b0xxxx: ALU operation
0b1000x: 16-bit write

DATA SOURCE:
0b0xxx: 8-bit register
0b10xx: 16-bit register halves
0b1110: ALU
0b1111: memory

ADDRESS SOURCE:
0b000: literal
0b001: Registers C/D
0b010: Program Counter
0b011: Stack Pointer
0b1xx: incrementer
    0b100: INCR + 1
    0b101: INCR - 1
    0b110: INCR + L1
    0b111: INCR - L2
